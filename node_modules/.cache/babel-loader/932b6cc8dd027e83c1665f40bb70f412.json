{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\src\\\\Components\\\\Stopwatch\\\\Stopwatch.js\";\n// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\nimport React, { Component } from \"react\";\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0,\n      timerSet: 0\n    };\n    this.saveTimer = this.saveTimer.bind(this);\n  }\n\n  saveTimer() {\n    let time = `${(this.state.timerTime + '').slice(-7, -5)} minutes, \n          ${(this.state.timerTime + '').slice(-5, -3)}.\n          ${(this.state.timerTime + '').slice(-3, -1)} seconds`;\n    console.log(time); // this.props.onChange(this.state.time)\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Stopwatch\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Start\"), this.state.timerOn === true && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"Stop\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"Resume\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Reset\"), this.state.timerOn === false && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"Save\"));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/Components/Stopwatch/Stopwatch.js"],"names":["React","Component","Stopwatch","constructor","props","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","timerSet","saveTimer","bind","time","slice","console","log","render","centiseconds","Math","floor","seconds","minutes","hours"],"mappings":"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","sourcesContent":["// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n            timerSet: 0,\r\n    }\r\n    this.saveTimer = this.saveTimer.bind(this)\r\n  }\r\n\r\n    startTimer = () => {\r\n      this.setState({\r\n        timerOn: true,\r\n        timerTime: this.state.timerTime,\r\n        timerStart: Date.now() - this.state.timerTime\r\n      });\r\n      this.timer = setInterval(() => {\r\n        this.setState({\r\n          timerTime: Date.now() - this.state.timerStart\r\n        });\r\n      }, 10);\r\n    };\r\n\r\n    stopTimer = () => {\r\n        this.setState({ timerOn: false });\r\n        clearInterval(this.timer);\r\n      };\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n      };\r\n\r\n    saveTimer() {\r\n        let time = `${(this.state.timerTime + '').slice(-7,-5)} minutes, \r\n          ${(this.state.timerTime + '').slice(-5,-3)}.\r\n          ${(this.state.timerTime + '').slice(-3, -1)} seconds`\r\n        console.log(time)\r\n        // this.props.onChange(this.state.time)\r\n      }\r\n\r\n    render() {\r\n        const { timerTime } = this.state;\r\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"Stopwatch\">\r\n                    <div className=\"Stopwatch-header\">Stopwatch</div>\r\n                </div>\r\n                <div className=\"Stopwatch-display\">\r\n                    {hours} : {minutes} : {seconds} : {centiseconds}\r\n                </div>\r\n                {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n                  <button onClick={this.startTimer}>Start</button>\r\n                )}\r\n                {this.state.timerOn === true && (\r\n                  <button onClick={this.stopTimer}>Stop</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.startTimer}>Resume</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.resetTimer}>Reset</button>\r\n                )}\r\n                {this.state.timerOn === false && (\r\n                  <button onClick={this.saveTimer}>Save</button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}