{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\src\\\\Components\\\\Current-workout\\\\Current-workout.js\";\nimport React from \"react\";\nimport SelectStrengthExercises from \"../Select-exercises/Select-strength-exercises\";\nimport SelectCardioExercises from \"../Select-exercises/Select-cardio-exercises\";\nimport StrengthWorkoutDisplay from \"../Workout-displays/Strength-Workout-display\";\nimport CardioWorkoutDisplay from \"../Workout-displays/Cardio-workout-display\";\nimport \"./Current-workout.css\";\n\nclass CurrentWorkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentWorkout: [],\n      currentExercises: [],\n      date: new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate()\n    };\n    this.updateExerciseList = this.updateExerciseList.bind(this);\n    this.updateWorkoutList = this.updateWorkoutList.bind(this);\n    this.resetWorkout = this.resetWorkout.bind(this);\n    this.saveWorkout = this.saveWorkout.bind(this);\n    this.newWorkout = this.newWorkout.bind(this);\n  }\n\n  resetWorkout() {\n    this.setState({\n      currentExercises: []\n    });\n  }\n\n  updateExerciseList(exercise) {\n    if (this.state.currentExercises.includes(exercise)) {} else {\n      const currentExercisesClone = Array.from(this.state.currentExercises);\n      currentExercisesClone.push(exercise);\n      this.setState({\n        currentExercises: currentExercisesClone\n      });\n      this.props.updateCurrentExercises(currentExercisesClone);\n    }\n  }\n\n  updateWorkoutList(info) {\n    this.setState({\n      currentWorkout: info\n    });\n    this.props.updateCurrentWorkout(info);\n  }\n\n  saveWorkout() {\n    this.props.saveWorkout(this.state.currentWorkout, this.state.date);\n  }\n\n  newWorkout() {\n    if (this.state.currentWorkout) {\n      //Save the workout\n      this.props.saveWorkout(this.state.currentWorkout); //setState will clear the currentExercises\n\n      this.setState({\n        currentExercises: []\n      });\n    } else {\n      this.setState({\n        currentExercises: []\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-and-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-display-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save-new-element\",\n      onClick: this.newWorkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Save and Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save-new-element\",\n      onClick: this.saveWorkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"save-new-element\",\n      onClick: this.resetWorkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Clear\")), this.props.workoutType === \"strength\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-display-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SelectStrengthExercises, {\n      onChange: this.updateExerciseList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(StrengthWorkoutDisplay, {\n      onChange: this.updateWorkoutList,\n      exerciseList: this.state.currentExercises,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), this.props.workoutType === \"cardio\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-display-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(SelectCardioExercises, {\n      onChange: this.updateExerciseList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(CardioWorkoutDisplay, {\n      onChange: this.updateWorkoutList,\n      exerciseList: this.state.currentExercises,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }\n    })));\n  }\n\n}\n\nexport default CurrentWorkout;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/Components/Current-workout/Current-workout.js"],"names":["React","SelectStrengthExercises","SelectCardioExercises","StrengthWorkoutDisplay","CardioWorkoutDisplay","CurrentWorkout","Component","constructor","props","state","currentWorkout","currentExercises","date","Date","getFullYear","getMonth","getDate","updateExerciseList","bind","updateWorkoutList","resetWorkout","saveWorkout","newWorkout","setState","exercise","includes","currentExercisesClone","Array","from","push","updateCurrentExercises","info","updateCurrentWorkout","render","workoutType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SelectStrengthExercises from \"../Select-exercises/Select-strength-exercises\";\nimport SelectCardioExercises from \"../Select-exercises/Select-cardio-exercises\";\nimport StrengthWorkoutDisplay from \"../Workout-displays/Strength-Workout-display\";\nimport CardioWorkoutDisplay from \"../Workout-displays/Cardio-workout-display\"\nimport \"./Current-workout.css\"\n\nclass CurrentWorkout extends React.Component{\n    constructor(props) {\n        super(props);\n    this.state = {\n        currentWorkout: [],\n        currentExercises: [],\n        date: new Date().getFullYear()+'-'+(new Date().getMonth()+1)+'-'+new Date().getDate()\n    }\n    this.updateExerciseList = this.updateExerciseList.bind(this);\n    this.updateWorkoutList = this.updateWorkoutList.bind(this); \n    this.resetWorkout = this.resetWorkout.bind(this);\n    this.saveWorkout = this.saveWorkout.bind(this);\n    this.newWorkout = this.newWorkout.bind(this);\n    }   \n\n    resetWorkout() {\n        this.setState({\n            currentExercises: []\n        })\n    }\n\n    updateExerciseList(exercise) {\n        if (this.state.currentExercises.includes(exercise)) {\n        } else {\n            const currentExercisesClone = Array.from(this.state.currentExercises);\n            currentExercisesClone.push(exercise);\n            this.setState({\n                currentExercises: currentExercisesClone\n            })\n            this.props.updateCurrentExercises(currentExercisesClone)\n        }\n    }\n\n    updateWorkoutList(info) {\n        this.setState({\n            currentWorkout: info\n        })\n        this.props.updateCurrentWorkout(info)\n    }\n\n    saveWorkout() {\n        this.props.saveWorkout(this.state.currentWorkout, this.state.date)\n    }\n\n    newWorkout() {\n        if (this.state.currentWorkout) {\n            //Save the workout\n            this.props.saveWorkout(this.state.currentWorkout);\n            //setState will clear the currentExercises\n            this.setState({\n                currentExercises: []\n            })\n        } else {\n            this.setState({\n                currentExercises: []\n            })\n        }\n    }\ns\n\n    render(){\n        return(\n        <div className=\"select-and-display\">\n                <div className=\"select-display-element\">\n                    <button className=\"save-new-element\" onClick={this.newWorkout}>Save and Clear</button>\n                    <button className=\"save-new-element\" onClick={this.saveWorkout}>Save</button>\n                    <button className=\"save-new-element\" onClick={this.resetWorkout}>Clear</button>\n                </div>\n                {/* If strength is selected: */}\n                {this.props.workoutType === \"strength\" && \n                    <div >   \n                        <div className=\"select-display-element\">\n                            <SelectStrengthExercises   \n                                onChange={this.updateExerciseList}\n                            />\n                        </div>\n                        <StrengthWorkoutDisplay \n                            onChange={this.updateWorkoutList} \n                            exerciseList={this.state.currentExercises}\n                            />\n                    </div>\n                }\n                {/* If cardio is selected: */}\n                {this.props.workoutType === \"cardio\" && \n                    <div>   \n                         <div className=\"select-display-element\">\n                             <SelectCardioExercises   \n                                 onChange={this.updateExerciseList}\n                             />\n                         </div>\n                         <CardioWorkoutDisplay \n                             onChange={this.updateWorkoutList} \n                             exerciseList={this.state.currentExercises}\n                             />\n                     </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default CurrentWorkout;"]},"metadata":{},"sourceType":"module"}