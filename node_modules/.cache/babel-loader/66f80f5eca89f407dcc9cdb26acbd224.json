{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\nimport React,{Component}from\"react\";import\"./Stopwatch.css\";var Stopwatch=/*#__PURE__*/function(_Component){_inherits(Stopwatch,_Component);var _super=_createSuper(Stopwatch);function Stopwatch(props){var _this;_classCallCheck(this,Stopwatch);_this=_super.call(this,props);_this.startTimer=function(){_this.setState({timerOn:true,timerTime:_this.state.timerTime,timerStart:Date.now()-_this.state.timerTime});_this.timer=setInterval(function(){_this.setState({timerTime:Date.now()-_this.state.timerStart});},10);};_this.stopTimer=function(){_this.setState({timerOn:false});clearInterval(_this.timer);};_this.resetTimer=function(){_this.setState({timerStart:0,timerTime:0});};_this.state={timerOn:false,timerStart:0,timerTime:0,timerSet:0};_this.saveTimer=_this.saveTimer.bind(_assertThisInitialized(_this));return _this;}_createClass(Stopwatch,[{key:\"saveTimer\",value:function saveTimer(){var centiseconds=(\"0\"+Math.floor(this.state.timerTime/10)%100).slice(-2);var seconds=(\"0\"+Math.floor(this.state.timerTime/1000)%60).slice(-2);var minutes=(\"0\"+Math.floor(this.state.timerTime/60000)%60).slice(-2);var hours=(\"0\"+Math.floor(this.state.timerTime/3600000)).slice(-2);//Removes the zeros from numbers\nif(seconds.slice(0,1)===\"0\"){seconds=seconds.slice(1);}if(minutes.slice(0,1)===\"0\"){minutes=minutes.slice(1);}if(hours.slice(0,1)===\"0\"){hours=hours.slice(1);}var time=//Only return the elements that are not 0. If minutes are present, display\n// number with \"minutes\"; if not, use \"seconds\"\n(hours!==\"0\"?hours+\" hours \":\"\")+(minutes!==\"0\"?minutes+\" min \":\"\")+seconds+(minutes!==\"0\"?\" minutes\":\".\"+centiseconds+\" seconds\");this.props.onChange(time);}},{key:\"render\",value:function render(){var timerTime=this.state.timerTime;var centiseconds=(\"0\"+Math.floor(timerTime/10)%100).slice(-2);var seconds=(\"0\"+Math.floor(timerTime/1000)%60).slice(-2);var minutes=(\"0\"+Math.floor(timerTime/60000)%60).slice(-2);var hours=(\"0\"+Math.floor(timerTime/3600000)).slice(-2);return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Stopwatch\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Stopwatch-header\"},\"Stopwatch\")),/*#__PURE__*/React.createElement(\"div\",{className:\"Stopwatch-display\"},hours,\" : \",minutes,\" : \",seconds,\" : \",centiseconds),this.state.timerOn===false&&this.state.timerTime===0&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.startTimer},\"Start\"),this.state.timerOn===true&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.stopTimer},\"Stop\"),this.state.timerOn===false&&this.state.timerTime>0&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.startTimer},\"Resume\"),this.state.timerOn===false&&this.state.timerTime>0&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.resetTimer},\"Reset\"),this.state.timerOn===false&&/*#__PURE__*/React.createElement(\"button\",{onClick:this.saveTimer},\"Save Set\"));}}]);return Stopwatch;}(Component);export default Stopwatch;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/Components/Stopwatch/Stopwatch.js"],"names":["React","Component","Stopwatch","props","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","timerSet","saveTimer","bind","centiseconds","Math","floor","slice","seconds","minutes","hours","time","onChange"],"mappings":"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","sourcesContent":["// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./Stopwatch.css\";\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n            timerSet: 0,\r\n    }\r\n    this.saveTimer = this.saveTimer.bind(this)\r\n  }\r\n\r\n    startTimer = () => {\r\n      this.setState({\r\n        timerOn: true,\r\n        timerTime: this.state.timerTime,\r\n        timerStart: Date.now() - this.state.timerTime\r\n      });\r\n      this.timer = setInterval(() => {\r\n        this.setState({\r\n          timerTime: Date.now() - this.state.timerStart\r\n        });\r\n      }, 10);\r\n    };\r\n\r\n    stopTimer = () => {\r\n        this.setState({ timerOn: false });\r\n        clearInterval(this.timer);\r\n      };\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n      };\r\n\r\n    saveTimer() {\r\n      let centiseconds = (\"0\" + (Math.floor(this.state.timerTime / 10) % 100)).slice(-2);\r\n      let seconds = (\"0\" + (Math.floor(this.state.timerTime / 1000) % 60)).slice(-2);\r\n      let minutes = (\"0\" + (Math.floor(this.state.timerTime / 60000) % 60)).slice(-2);\r\n      let hours = (\"0\" + Math.floor(this.state.timerTime / 3600000)).slice(-2)\r\n      \r\n      //Removes the zeros from numbers\r\n      if (seconds.slice(0, 1) === \"0\") {seconds = seconds.slice(1)}\r\n      if (minutes.slice(0, 1) === \"0\") {minutes = minutes.slice(1)}\r\n      if (hours.slice(0, 1) === \"0\") {hours = hours.slice(1)}\r\n\r\n      let time = //Only return the elements that are not 0. If minutes are present, display\r\n                 // number with \"minutes\"; if not, use \"seconds\"\r\n                  (hours !== \"0\" ? hours + \" hours \" : \"\") +\r\n                  (minutes !== \"0\" ? minutes + \" min \" : \"\") +\r\n                  seconds + \r\n                  (minutes !== \"0\" ? \" minutes\" : \".\" + centiseconds + \" seconds\")\r\n      this.props.onChange(time)\r\n      }\r\n\r\n    render() {\r\n        const { timerTime } = this.state;\r\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"Stopwatch\">\r\n                    <div className=\"Stopwatch-header\">Stopwatch</div>\r\n                </div>\r\n                <div className=\"Stopwatch-display\">\r\n                    {hours} : {minutes} : {seconds} : {centiseconds}\r\n                </div>\r\n                {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n                  <button onClick={this.startTimer}>Start</button>\r\n                )}\r\n                {this.state.timerOn === true && (\r\n                  <button onClick={this.stopTimer}>Stop</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.startTimer}>Resume</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.resetTimer}>Reset</button>\r\n                )}\r\n                {this.state.timerOn === false && (\r\n                  <button onClick={this.saveTimer}>Save Set</button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}