{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport WorkoutPage from './Components/Pages/Workout-Page/Workout-page';\nimport PreviousWorkoutsPage from './Components/Pages/Previous-workouts-page/Previous-workouts-page';\nimport GoalsPage from './Components/Pages/Goals page/Goals-page';\nimport Home from './Components/Pages/Home page/Home';\nimport Nav from \"./Components/Nav-bar/Nav-bar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const [currentWorkoutInfo, setCurrentWorkoutInfo] = useState([]);\n  const [workoutDate, setWorkoutDate] = useState();\n\n  function updateWorkoutInfo(info, date) {\n    if (currentWorkoutInfo) {\n      const workoutInfoClone = Array.from(currentWorkoutInfo);\n      workoutInfoClone.push(info);\n      setCurrentWorkoutInfo(workoutInfoClone);\n      setWorkoutDate(date);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: process.env.PUBLIC_URL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/workout\",\n    render: () => /*#__PURE__*/React.createElement(WorkoutPage, {\n      onChange: updateWorkoutInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/previous-workouts\",\n    render: props => /*#__PURE__*/React.createElement(PreviousWorkoutsPage, Object.assign({}, props, {\n      workoutInfo: currentWorkoutInfo,\n      date: workoutDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/goals\",\n    component: GoalsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/App.js"],"names":["React","useState","WorkoutPage","PreviousWorkoutsPage","GoalsPage","Home","Nav","BrowserRouter","Router","Switch","Route","App","currentWorkoutInfo","setCurrentWorkoutInfo","workoutDate","setWorkoutDate","updateWorkoutInfo","info","date","workoutInfoClone","Array","from","push","process","env","PUBLIC_URL","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,oBAAP,MAAiC,kEAAjC;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;;AAEA,WAASe,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACrC,QAAIN,kBAAJ,EAAwB;AACtB,YAAMO,gBAAgB,GAAGC,KAAK,CAACC,IAAN,CAAWT,kBAAX,CAAzB;AACAO,MAAAA,gBAAgB,CAACG,IAAjB,CAAsBL,IAAtB;AACAJ,MAAAA,qBAAqB,CAACM,gBAAD,CAArB;AACAJ,MAAAA,cAAc,CAACG,IAAD,CAAd;AACH;AAAC;;AAEF,sBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEK,OAAO,CAACC,GAAR,CAAYC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,MAFP;AAEQ,IAAA,SAAS,EAAEpB,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAE,mBAAM,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEW,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,MAAM,EAAGU,KAAD,iBAAW,oBAAC,oBAAD,oBAA0BA,KAA1B;AACjB,MAAA,WAAW,EAAEd,kBADI;AAEjB,MAAA,IAAI,EAAEE,WAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAcE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEV,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAFF,CADF,CADF;AAuBC;;AAEH,eAAeO,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport WorkoutPage from './Components/Pages/Workout-Page/Workout-page';\nimport PreviousWorkoutsPage from './Components/Pages/Previous-workouts-page/Previous-workouts-page';\nimport GoalsPage from './Components/Pages/Goals page/Goals-page'\nimport Home from './Components/Pages/Home page/Home';\nimport Nav from \"./Components/Nav-bar/Nav-bar\"\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  const [currentWorkoutInfo, setCurrentWorkoutInfo] = useState([]);\n  const [workoutDate, setWorkoutDate] = useState();\n\n  function updateWorkoutInfo(info, date) {\n    if (currentWorkoutInfo) {\n      const workoutInfoClone = Array.from(currentWorkoutInfo);\n      workoutInfoClone.push(info);\n      setCurrentWorkoutInfo(workoutInfoClone);\n      setWorkoutDate(date)\n  }}\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}> \n      <div className=\"App\">\n        <Nav/>\n        <Switch>\n          <Route \n            path=\"/\" \n            exact component={Home}/>\n          <Route \n            path=\"/workout\" \n            render={() => <WorkoutPage onChange={updateWorkoutInfo}/>}\n            />\n          <Route \n            path=\"/previous-workouts\" \n            render={(props) => <PreviousWorkoutsPage {...props} \n              workoutInfo={currentWorkoutInfo} \n              date={workoutDate}/>}\n            />\n          <Route path=\"/goals\" component={GoalsPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}