{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import WorkoutPage from'./Components/Workout-Page/Workout-page';import PreviousWorkoutsPage from'./Components/Previous-workouts-page/Previous-workouts-page';import Home from'./Components/Home';import Nav from\"./Components/Nav-bar/Nav-bar\";import{BrowserRouter as Router,Switch,Route}from'react-router-dom';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentWorkoutInfo=_useState2[0],setCurrentWorkoutInfo=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),workoutDate=_useState4[0],setWorkoutDate=_useState4[1];function updateWorkoutInfo(info,date){if(currentWorkoutInfo){var workoutInfoClone=Array.from(currentWorkoutInfo);workoutInfoClone.push(info);setCurrentWorkoutInfo(workoutInfoClone);setWorkoutDate(date);}}return/*#__PURE__*/React.createElement(Router,{basename:process.env.PUBLIC_URL},/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Nav,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,component:Home}),/*#__PURE__*/React.createElement(Route,{path:\"/workout\",render:function render(){return/*#__PURE__*/React.createElement(WorkoutPage,{onChange:updateWorkoutInfo});}}),/*#__PURE__*/React.createElement(Route,{path:\"/previous-workouts\",render:function render(props){return/*#__PURE__*/React.createElement(PreviousWorkoutsPage,Object.assign({},props,{workoutInfo:currentWorkoutInfo,date:workoutDate}));}}))));}export default App;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/App.js"],"names":["React","useState","WorkoutPage","PreviousWorkoutsPage","Home","Nav","BrowserRouter","Router","Switch","Route","App","currentWorkoutInfo","setCurrentWorkoutInfo","workoutDate","setWorkoutDate","updateWorkoutInfo","info","date","workoutInfoClone","Array","from","push","process","env","PUBLIC_URL","props"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,wCAAxB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,4DAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,8BAAhB,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,CAAiCC,MAAjC,CAAyCC,KAAzC,KAAqD,kBAArD,CAEA,QAASC,CAAAA,GAAT,EAAe,eACuCT,QAAQ,CAAC,EAAD,CAD/C,wCACNU,kBADM,eACcC,qBADd,8BAEyBX,QAAQ,EAFjC,yCAENY,WAFM,eAEOC,cAFP,eAIb,QAASC,CAAAA,iBAAT,CAA2BC,IAA3B,CAAiCC,IAAjC,CAAuC,CACrC,GAAIN,kBAAJ,CAAwB,CACtB,GAAMO,CAAAA,gBAAgB,CAAGC,KAAK,CAACC,IAAN,CAAWT,kBAAX,CAAzB,CACAO,gBAAgB,CAACG,IAAjB,CAAsBL,IAAtB,EACAJ,qBAAqB,CAACM,gBAAD,CAArB,CACAJ,cAAc,CAACG,IAAD,CAAd,CACH,CAAC,CAEF,mBACE,oBAAC,MAAD,EAAQ,QAAQ,CAAEK,OAAO,CAACC,GAAR,CAAYC,UAA9B,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,GAAD,MADF,cAEE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EACE,IAAI,CAAC,GADP,CAEE,KAAK,KAFP,CAEQ,SAAS,CAAEpB,IAFnB,EADF,cAIE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,MAAM,CAAE,qCAAM,oBAAC,WAAD,EAAa,QAAQ,CAAEW,iBAAvB,EAAN,EAFV,EAJF,cAQE,oBAAC,KAAD,EACE,IAAI,CAAC,oBADP,CAEE,MAAM,CAAE,gBAACU,KAAD,qBAAW,oBAAC,oBAAD,kBAA0BA,KAA1B,EACjB,WAAW,CAAEd,kBADI,CAEjB,IAAI,CAAEE,WAFW,GAAX,EAFV,EARF,CAFF,CADF,CADF,CAuBC,CAEH,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport WorkoutPage from './Components/Workout-Page/Workout-page';\nimport PreviousWorkoutsPage from './Components/Previous-workouts-page/Previous-workouts-page'\nimport Home from './Components/Home';\nimport Nav from \"./Components/Nav-bar/Nav-bar\"\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  const [currentWorkoutInfo, setCurrentWorkoutInfo] = useState([]);\n  const [workoutDate, setWorkoutDate] = useState();\n\n  function updateWorkoutInfo(info, date) {\n    if (currentWorkoutInfo) {\n      const workoutInfoClone = Array.from(currentWorkoutInfo);\n      workoutInfoClone.push(info);\n      setCurrentWorkoutInfo(workoutInfoClone);\n      setWorkoutDate(date)\n  }}\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}> \n      <div className=\"App\">\n        <Nav/>\n        <Switch>\n          <Route \n            path=\"/\" \n            exact component={Home}/>\n          <Route \n            path=\"/workout\" \n            render={() => <WorkoutPage onChange={updateWorkoutInfo}/>}\n            />\n          <Route \n            path=\"/previous-workouts\" \n            render={(props) => <PreviousWorkoutsPage {...props} \n              workoutInfo={currentWorkoutInfo} \n              date={workoutDate}/>}\n            />\n          {/* <Route path=\"/goals\" component={GoalsPage} /> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}