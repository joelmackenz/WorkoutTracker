{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivian\\\\Desktop\\\\Coding projects\\\\WorkoutTracker\\\\src\\\\Components\\\\Stopwatch\\\\Stopwatch.js\";\n// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\nimport React, { Component } from \"react\";\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0,\n      timerSet: 0\n    };\n    this.saveTimer = this.saveTimer.bind(this);\n  }\n\n  saveTimer() {\n    let centiseconds = (\"0\" + Math.floor(this.state.timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(this.state.timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(this.state.timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(this.state.timerTime / 3600000)).slice(-2); //Removes the zeros from numbers\n\n    if (seconds.slice(0, 1) === \"0\") {\n      seconds = seconds.slice(1);\n    }\n\n    if (minutes.slice(0, 1) === \"0\") {\n      minutes = minutes.slice(1);\n    }\n\n    if (hours.slice(0, 1) === \"0\") {\n      hours = hours.slice(1);\n    }\n\n    let time = //Only return the elements that are not 0. If minutes are present, display\n    // number with \"minutes\"; if not, use \"seconds\"\n    (hours !== \"0\" ? hours + \" hours\" : \"\") + (minutes !== \"0\" ? minutes + \"min\" : \"\") + seconds + (minutes !== \"0\" ? \" minutes\" : \".\" + centiseconds + \" seconds\");\n    console.log(time); // this.props.onChange(this.state.time)\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Stopwatch\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"Start\"), this.state.timerOn === true && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Stop\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \"Resume\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"Reset\"), this.state.timerOn === false && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Save\"));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/Vivian/Desktop/Coding projects/WorkoutTracker/src/Components/Stopwatch/Stopwatch.js"],"names":["React","Component","Stopwatch","constructor","props","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","timerSet","saveTimer","bind","centiseconds","Math","floor","slice","seconds","minutes","hours","time","console","log","render"],"mappings":"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","sourcesContent":["// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n            timerSet: 0,\r\n    }\r\n    this.saveTimer = this.saveTimer.bind(this)\r\n  }\r\n\r\n    startTimer = () => {\r\n      this.setState({\r\n        timerOn: true,\r\n        timerTime: this.state.timerTime,\r\n        timerStart: Date.now() - this.state.timerTime\r\n      });\r\n      this.timer = setInterval(() => {\r\n        this.setState({\r\n          timerTime: Date.now() - this.state.timerStart\r\n        });\r\n      }, 10);\r\n    };\r\n\r\n    stopTimer = () => {\r\n        this.setState({ timerOn: false });\r\n        clearInterval(this.timer);\r\n      };\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n      };\r\n\r\n    saveTimer() {\r\n      let centiseconds = (\"0\" + (Math.floor(this.state.timerTime / 10) % 100)).slice(-2);\r\n      let seconds = (\"0\" + (Math.floor(this.state.timerTime / 1000) % 60)).slice(-2);\r\n      let minutes = (\"0\" + (Math.floor(this.state.timerTime / 60000) % 60)).slice(-2);\r\n      let hours = (\"0\" + Math.floor(this.state.timerTime / 3600000)).slice(-2)\r\n      \r\n      //Removes the zeros from numbers\r\n      if (seconds.slice(0, 1) === \"0\") {seconds = seconds.slice(1)}\r\n      if (minutes.slice(0, 1) === \"0\") {minutes = minutes.slice(1)}\r\n      if (hours.slice(0, 1) === \"0\") {hours = hours.slice(1)}\r\n\r\n      let time = //Only return the elements that are not 0. If minutes are present, display\r\n                 // number with \"minutes\"; if not, use \"seconds\"\r\n                  (hours !== \"0\" ? hours + \" hours\" : \"\") +\r\n                  (minutes !== \"0\" ? minutes + \"min\" : \"\") +\r\n                  seconds + \r\n                  (minutes !== \"0\" ? \" minutes\" : \".\" + centiseconds + \" seconds\")\r\n      console.log(time)\r\n      // this.props.onChange(this.state.time)\r\n      }\r\n\r\n    render() {\r\n        const { timerTime } = this.state;\r\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"Stopwatch\">\r\n                    <div className=\"Stopwatch-header\">Stopwatch</div>\r\n                </div>\r\n                <div className=\"Stopwatch-display\">\r\n                    {hours} : {minutes} : {seconds} : {centiseconds}\r\n                </div>\r\n                {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n                  <button onClick={this.startTimer}>Start</button>\r\n                )}\r\n                {this.state.timerOn === true && (\r\n                  <button onClick={this.stopTimer}>Stop</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.startTimer}>Resume</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.resetTimer}>Reset</button>\r\n                )}\r\n                {this.state.timerOn === false && (\r\n                  <button onClick={this.saveTimer}>Save</button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}