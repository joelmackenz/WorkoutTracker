{"version":3,"sources":["Components/Select-exercises/Select-strength-exercises.js","Components/Select-exercises/Select-cardio-exercises.js","Components/Number-input/Number-input.js","Components/Exercise-display/Reps-sets-exercise-display.js","Components/Workout-displays/Strength-Workout-display.js","Components/Stopwatch/Stopwatch.js","Components/Exercise-display/Cardio-time-button.js","Components/Exercise-display/Cardio-exercise-display.js","Components/Workout-displays/Cardio-workout-display.js","Components/Current-workout/Current-workout.js","Components/Workout-Page/New-workout-button.js","Components/Workout-Page/Workout-page.js","Components/Accordion/Accordion.js","Components/Previous-workouts-page/Previous-workouts-page.js","Components/Home.js","Components/Nav-bar/Nav-bar.js","App.js","serviceWorker.js","index.js"],"names":["selectStrengthExercises","props","state","selectedExercise","handleChange","bind","e","preventDefault","this","setState","target","value","onChange","id","selected","disabled","hidden","React","Component","selectCardioExercises","NumberInput","chosenReps","changeReps","submitChange","className","onSubmit","type","ExerciseDisplay","sets","reps","exercise","addSet","StrengthWorkoutDisplay","selectedExercises","saveExercises","exerciseInfoArray","selectedExercisesClone","Array","from","push","exerciseList","map","entry","i","key","Stopwatch","startTimer","timerOn","timerTime","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","timerSet","saveTimer","centiseconds","Math","floor","slice","seconds","minutes","hours","time","onClick","CardioTimeButton","setTime","timePeriod","CardioExerciseDisplay","removeExercise","CardioWorkoutDisplay","CurrentWorkout","currentWorkout","currentExercises","date","getFullYear","getMonth","getDate","updateExerciseList","updateWorkoutList","resetWorkout","saveWorkout","newWorkout","includes","currentExercisesClone","updateCurrentExercises","info","updateCurrentWorkout","workoutType","NewWorkoutButton","title","WorkoutPage","exerciseInfo","workoutInfo","currentWorkoutInfo","Accordion","accordionStyle","accordionDisplay","buttonTitle","PreviousWorkoutsPage","workoutsInfo","length","x","Object","values","index","workouts","Home","href","Nav","to","App","useState","setCurrentWorkoutInfo","workoutDate","setWorkoutDate","updateWorkoutInfo","workoutInfoClone","basename","process","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18ef5cfb.chunk.js","sourcesContent":["import React from \"react\";\n\nclass selectStrengthExercises extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            selectedExercise: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({\n            selectedExercise: e.target.value\n        })\n        this.props.onChange(e.target.value)\n    }\n\n    render(){\n        return(\n                <select \n                id=\"lessonSelect\" \n                onChange={this.handleChange}>\n                    <option value=\"\" selected disabled hidden>Choose an exercise</option>\n                    <option value=\"Benchpress\">Benchpress</option>\n                    <option value=\"Squat\">Squat</option>\n                    <option value=\"Deadlift\">Deadlift</option>\n                    <option value=\"Shoulder press\">Shoulder Press</option>\n                </select>\n        )\n    }\n}\n\nexport default selectStrengthExercises;","import React from \"react\";\r\n\r\nclass selectCardioExercises extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedExercise: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            selectedExercise: e.target.value\r\n        })\r\n        this.props.onChange(e.target.value)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <select \r\n                id=\"lessonSelect\" \r\n                onChange={this.handleChange}>\r\n                    <option value=\"\" selected disabled hidden>Choose an exercise</option>\r\n                    <option value=\"Running\">Running</option>\r\n                    <option value=\"Walking\">Walking</option>\r\n                    <option value=\"Swimming\">Swimming</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default selectCardioExercises;","import React from \"react\";\nimport \"./Number-input.css\";\n\nclass NumberInput extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            chosenReps: 10,\n        }\n        this.changeReps = this.changeReps.bind(this)\n        this.submitChange = this.submitChange.bind(this)\n    }\n\n    changeReps(e){\n        this.setState ({\n            chosenReps: e.target.value\n        })\n    }\n\n    submitChange(e) {\n        e.preventDefault();\n        const chosenReps = this.state.chosenReps;\n        this.props.onChange(chosenReps);\n    }\n\n    render(){\n        return (\n            <form className=\"form\" onSubmit={this.submitChange}>\n                <p>Reps</p>\n                <input className=\"input\" type=\"number\" onChange={this.changeReps} value={this.state.chosenReps}/>\n                <input className=\"button\" type=\"submit\" value=\"Set\"/>\n            </form>\n        )\n    }\n}\n\nexport default NumberInput;","import React from \"react\";\nimport NumberInput from \"../Number-input/Number-input\"\nimport \"./Exercise-display.css\";\n\nclass ExerciseDisplay extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            sets: 0,\n            reps: 0,\n            exercise: \"\",\n        }\n    this.addSet = this.addSet.bind(this);\n    }\n\n    addSet(reps){\n        this.setState({\n            sets: this.state.sets +1,\n            reps: reps,\n            exercise: this.props.exercise\n        })\n        this.props.onChange([this.state.sets + 1, reps, this.props.exercise])\n    }\n\n    render(){\n        return(\n            <div className=\"exercise\">\n                <h3 className=\"title\">{this.props.exercise}</h3>\n                <NumberInput onChange={this.addSet}/>\n                <div>\n                    <p>Complete Sets</p>\n                    <p>Sets: {this.state.sets}</p>\n                    <p>Reps: {this.state.reps}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ExerciseDisplay;","//This displays a number of exercises' info. It will map over the info taken from ../Select-exercises/Exercise-display.js\n\nimport React from \"react\";\nimport ExerciseDisplay from \"../Exercise-display/Reps-sets-exercise-display\";\nimport \"./Strength-Workout-display.css\";\n\nclass StrengthWorkoutDisplay extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n           selectedExercises: []\n        }\n        this.saveExercises = this.saveExercises.bind(this)\n    }\n\n    saveExercises(exerciseInfoArray) {\n        let selectedExercisesClone = Array.from(this.state.selectedExercises)\n        selectedExercisesClone.push(exerciseInfoArray)\n        this.setState({\n            selectedExercises: selectedExercisesClone\n        })\n        this.props.onChange(selectedExercisesClone)\n    }\n\n    render(){\n        return(\n            <div className=\"exercises\">\n                {this.props.exerciseList.map((entry, i) => \n                    <ExerciseDisplay \n                        key={i}\n                        exercise={entry} \n                        onChange={this.saveExercises}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default StrengthWorkoutDisplay;","// Adapted from https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n            timerSet: 0,\r\n    }\r\n    this.saveTimer = this.saveTimer.bind(this)\r\n  }\r\n\r\n    startTimer = () => {\r\n      this.setState({\r\n        timerOn: true,\r\n        timerTime: this.state.timerTime,\r\n        timerStart: Date.now() - this.state.timerTime\r\n      });\r\n      this.timer = setInterval(() => {\r\n        this.setState({\r\n          timerTime: Date.now() - this.state.timerStart\r\n        });\r\n      }, 10);\r\n    };\r\n\r\n    stopTimer = () => {\r\n        this.setState({ timerOn: false });\r\n        clearInterval(this.timer);\r\n      };\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n      };\r\n\r\n    saveTimer() {\r\n      let centiseconds = (\"0\" + (Math.floor(this.state.timerTime / 10) % 100)).slice(-2);\r\n      let seconds = (\"0\" + (Math.floor(this.state.timerTime / 1000) % 60)).slice(-2);\r\n      let minutes = (\"0\" + (Math.floor(this.state.timerTime / 60000) % 60)).slice(-2);\r\n      let hours = (\"0\" + Math.floor(this.state.timerTime / 3600000)).slice(-2)\r\n      \r\n      //Removes the zeros from numbers\r\n      if (seconds.slice(0, 1) === \"0\") {seconds = seconds.slice(1)}\r\n      if (minutes.slice(0, 1) === \"0\") {minutes = minutes.slice(1)}\r\n      if (hours.slice(0, 1) === \"0\") {hours = hours.slice(1)}\r\n\r\n      let time = //Only return the elements that are not 0. If minutes are present, display\r\n                 // number with \"minutes\"; if not, use \"seconds\"\r\n                  (hours !== \"0\" ? hours + \" hours \" : \"\") +\r\n                  (minutes !== \"0\" ? minutes + \" min \" : \"\") +\r\n                  seconds + \r\n                  (minutes !== \"0\" ? \" minutes\" : \".\" + centiseconds + \" seconds\")\r\n      this.props.onChange(time)\r\n      }\r\n\r\n    render() {\r\n        const { timerTime } = this.state;\r\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"Stopwatch\">\r\n                    <div className=\"Stopwatch-header\">Stopwatch</div>\r\n                </div>\r\n                <div className=\"Stopwatch-display\">\r\n                    {hours} : {minutes} : {seconds} : {centiseconds}\r\n                </div>\r\n                {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n                  <button onClick={this.startTimer}>Start</button>\r\n                )}\r\n                {this.state.timerOn === true && (\r\n                  <button onClick={this.stopTimer}>Stop</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.startTimer}>Resume</button>\r\n                )}\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                  <button onClick={this.resetTimer}>Reset</button>\r\n                )}\r\n                {this.state.timerOn === false && (\r\n                  <button onClick={this.saveTimer}>Save</button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Stopwatch;","import React from \"react\";\r\n\r\nclass CardioTimeButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.setTime = this.setTime.bind(this)\r\n    }\r\n\r\n    setTime(){\r\n        this.props.onChange(this.props.timePeriod)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.setTime}>{this.props.timePeriod}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardioTimeButton;","import React from \"react\";\r\nimport Stopwatch from \"../Stopwatch/Stopwatch\"\r\nimport \"./Exercise-display.css\";\r\nimport CardioTimeButton from \"./Cardio-time-button\";\r\n\r\nclass CardioExerciseDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sets: 0,\r\n            time: 0,\r\n            exercise: \"\",\r\n        }\r\n    this.addSet = this.addSet.bind(this);\r\n    this.removeExercise = this.removeExercise.bind(this)\r\n    }\r\n\r\n    addSet(time){\r\n        this.setState({\r\n            sets: this.state.sets +1,\r\n            time: time,\r\n            exercise: this.props.exercise\r\n        })\r\n        this.props.onChange([this.state.sets + 1, time, this.props.exercise])\r\n    }\r\n\r\n    removeExercise(){\r\n        this.props.removeExercise(this.props.exercise)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"exercise\">\r\n                <button onClick={this.removeExercise}>X</button>\r\n                <h3 className=\"title\">{this.props.exercise}</h3>\r\n                <Stopwatch onChange={this.addSet}/>\r\n                <div className=\"buttons\">\r\n                    <CardioTimeButton onChange={this.addSet} timePeriod=\"10 min\" />\r\n                    <CardioTimeButton onChange={this.addSet} timePeriod=\"20 min\" />\r\n                    <CardioTimeButton onChange={this.addSet} timePeriod=\"30 min\" />\r\n                </div>\r\n                <div>\r\n                    <p>Complete Sets</p>\r\n                    <p>Sets: {this.state.sets}</p>\r\n                    <p>Time: {this.state.time}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardioExerciseDisplay;","//This displays a number of exercises' info. It will map over the info taken from ../Select-exercises/Exercise-display.js\r\n\r\nimport React from \"react\";\r\nimport CardioExerciseDisplay from \"../Exercise-display/Cardio-exercise-display\";\r\nimport \"./Cardio-workout-display.css\";\r\n\r\nclass CardioWorkoutDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           selectedExercises: []\r\n        }\r\n        this.saveExercises = this.saveExercises.bind(this)\r\n        this.removeExercise = this.removeExercise.bind(this)\r\n    }\r\n\r\n    saveExercises(exerciseInfoArray) {\r\n        let selectedExercisesClone = Array.from(this.state.selectedExercises)\r\n        selectedExercisesClone.push(exerciseInfoArray)\r\n        this.setState({\r\n            selectedExercises: selectedExercisesClone\r\n        })\r\n        this.props.onChange(selectedExercisesClone)\r\n    }\r\n\r\n    removeExercise(exercise){\r\n        this.props.removeExercise(exercise)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"exercises\">\r\n                {this.props.exerciseList.map((entry, i) => \r\n                    <CardioExerciseDisplay \r\n                        key={i}\r\n                        exercise={entry} \r\n                        onChange={this.saveExercises}\r\n                        removeExercise={this.removeExercise}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardioWorkoutDisplay;","import React from \"react\";\nimport SelectStrengthExercises from \"../Select-exercises/Select-strength-exercises\";\nimport SelectCardioExercises from \"../Select-exercises/Select-cardio-exercises\";\nimport StrengthWorkoutDisplay from \"../Workout-displays/Strength-Workout-display\";\nimport CardioWorkoutDisplay from \"../Workout-displays/Cardio-workout-display\"\nimport \"./Current-workout.css\"\n\nclass CurrentWorkout extends React.Component{\n    constructor(props) {\n        super(props);\n    this.state = {\n        currentWorkout: [],\n        currentExercises: [],\n        date: new Date().getFullYear()+'-'+(new Date().getMonth()+1)+'-'+new Date().getDate()\n    }\n    this.updateExerciseList = this.updateExerciseList.bind(this);\n    this.updateWorkoutList = this.updateWorkoutList.bind(this); \n    this.resetWorkout = this.resetWorkout.bind(this);\n    this.saveWorkout = this.saveWorkout.bind(this);\n    this.newWorkout = this.newWorkout.bind(this);\n    this.removeExercise = this.removeExercise.bind(this)\n    }   \n\n    resetWorkout() {\n        this.setState({\n            currentExercises: []\n        })\n    }\n\n    updateExerciseList(exercise) {\n        if (this.state.currentExercises.includes(exercise)) {\n        } else {\n            const currentExercisesClone = Array.from(this.state.currentExercises);\n            currentExercisesClone.push(exercise);\n            this.setState({\n                currentExercises: currentExercisesClone\n            })\n            this.props.updateCurrentExercises(currentExercisesClone)\n        }\n    }\n\n    updateWorkoutList(info) {\n        this.setState({\n            currentWorkout: info\n        })\n        this.props.updateCurrentWorkout(info)\n    }\n\n    saveWorkout() {\n        this.props.saveWorkout(this.state.currentWorkout, this.state.date)\n    }\n\n    newWorkout() {\n        if (this.state.currentWorkout) {\n            //Save the workout\n            this.props.saveWorkout(this.state.currentWorkout);\n            //setState will clear the currentExercises\n            this.setState({\n                currentExercises: []\n            })\n        } else {\n            this.setState({\n                currentExercises: []\n            })\n        }\n    }\n\n    removeExercise(exercise){\n        let currentExercisesClone = Array.from(this.state.currentExercises)\n        // currentExercisesClone.filter(function(value){ return value === exercise;});\n        //^^^^^^^^^^^^ This must select everything that isn't the exercise and return them\n        this.setState({\n            currentExercises: currentExercisesClone\n        })\n    }\ns\n\n    render(){\n        return(\n        <div className=\"select-and-display\">\n                <div className=\"select-display-element\">\n                    <button className=\"save-new-element\" onClick={this.newWorkout}>Save and Clear</button>\n                    <button className=\"save-new-element\" onClick={this.saveWorkout}>Save</button>\n                    <button className=\"save-new-element\" onClick={this.resetWorkout}>Clear</button>\n                </div>\n                {/* If strength is selected: */}\n                {this.props.workoutType === \"strength\" && \n                    <div className=\"select-display-element-2\">   \n                        <div className=\"inner-1\">\n                            <SelectStrengthExercises   \n                                onChange={this.updateExerciseList}\n                            />\n                        </div>\n                        <div className=\"inner-2\">\n                            <StrengthWorkoutDisplay \n                                onChange={this.updateWorkoutList} \n                                exerciseList={this.state.currentExercises}\n                            />\n                        </div>\n                    </div>\n                }\n                {/* If cardio is selected: */}\n                {this.props.workoutType === \"cardio\" && \n                    <div className=\"select-display-element-2\">   \n                         <div className=\"inner-1\">\n                             <SelectCardioExercises   \n                                 onChange={this.updateExerciseList}\n                             />\n                        </div>\n                        <div className=\"inner-2\">\n                            <CardioWorkoutDisplay \n                                removeExercise={this.removeExercise}\n                                onChange={this.updateWorkoutList} \n                                exerciseList={this.state.currentExercises}\n                                />\n                        </div>\n                     </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default CurrentWorkout;","import React from \"react\"\r\n\r\nclass NewWorkoutButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            workoutType: \"\"\r\n        }\r\n    this.newWorkout = this.newWorkout.bind(this)\r\n    }\r\n\r\n    newWorkout() {\r\n        this.setState({\r\n            workoutType: this.props.workoutType\r\n        })\r\n        this.props.onChange(this.props.workoutType)\r\n    }\r\n    //     } else {\r\n    //         this.setState({\r\n    //             newStrengthWorkout: !this.state.newStrengthWorkout\r\n    //         })\r\n    //         if (this.state.currentWorkout) {\r\n    //             //Save the workout\r\n    //             this.saveWorkout(this.state.currentWorkout);\r\n    //             //setState will clear the currentExercises\r\n    //             this.setState({\r\n    //                 currentExercises: []\r\n    //             })\r\n    //         } else {\r\n    //             this.setState({\r\n    //                 currentExercises: []\r\n    //             })\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <button onClick={this.newWorkout}>\r\n                    {this.props.title}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWorkoutButton;","import React from \"react\";\nimport \"./Workout-page.css\";\nimport CurrentWorkout from \"../Current-workout/Current-workout\"\nimport NewWorkoutButton from \"./New-workout-button\";\n\nexport class WorkoutPage extends React.Component {\n    constructor(props) {\n        super(props);\n    this.state = {\n        currentExercises: [],\n        currentWorkout: [],\n        workoutType: \"\",\n        date: new Date().getFullYear()+'-'+(new Date().getMonth()+1)+'-'+new Date().getDate()\n    }\n    this.updateCurrentExercises = this.updateCurrentExercises.bind(this);\n    this.updateCurrentWorkout = this.updateCurrentWorkout.bind(this);\n    this.newWorkout = this.newWorkout.bind(this);\n    this.resetWorkout = this.resetWorkout.bind(this);\n    this.saveWorkout = this.saveWorkout.bind(this);  \n    }\n\n    updateCurrentExercises(exerciseInfo) {\n        this.setState({\n            currentExercises: exerciseInfo,\n        })\n    }\n\n    updateCurrentWorkout(workoutInfo) {\n        this.setState({\n            currentWorkout: workoutInfo\n        })\n    }\n\n    saveWorkout(currentWorkoutInfo, date) {\n        this.props.onChange(currentWorkoutInfo, date)\n    }\n\n    resetWorkout() {\n        this.setState({\n            currentExercises: []\n        })\n    }\n\n    newWorkout(workoutType) {\n        this.setState({\n            workoutType: workoutType,\n        })\n        \n        // if (!WorkoutType) {\n        //     this.setState({\n        //         newStrengthWorkout: !this.state.newStrengthWorkout\n        //     })\n        // } else {\n        //     this.setState({\n        //         newStrengthWorkout: !this.state.newStrengthWorkout\n        //     })\n        //     if (this.state.currentWorkout) {\n        //         //Save the workout\n        //         this.saveWorkout(this.state.currentWorkout);\n        //         //setState will clear the currentExercises\n        //         this.setState({\n        //             currentExercises: []\n        //         })\n        //     } else {\n        //         this.setState({\n        //             currentExercises: []\n        //         })\n        //     }\n        // }\n    }\n\n    render() {\n        return(\n            <div>\n                <NewWorkoutButton title=\"New Strength Workout\" workoutType=\"strength\" onChange={this.newWorkout}/>\n                <NewWorkoutButton title=\"New Cardio Workout\" workoutType=\"cardio\" onChange={this.newWorkout}/>\n                {this.state.workoutType === \"strength\" && <CurrentWorkout \n                                                            workoutType=\"strength\"\n                                                            updateCurrentExercises={this.updateCurrentExercises}\n                                                            updateCurrentWorkout={this.updateCurrentWorkout}\n                                                            saveWorkout={this.saveWorkout}/>}\n                {this.state.workoutType === \"cardio\" && <CurrentWorkout\n                                                            workoutType=\"cardio\"\n                                                            updateCurrentExercises={this.updateCurrentExercises}\n                                                            updateCurrentWorkout={this.updateCurrentWorkout}\n                                                            saveWorkout={this.saveWorkout}/>}\n            </div>\n        )\n    }\n}\n\nexport default WorkoutPage;","import React from \"react\";\nimport \"./Accordion.css\"\n\nclass Accordion extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            accordionStyle: \"closed\"\n        }\n        this.accordionDisplay = this.accordionDisplay.bind(this)\n    }\n\n    accordionDisplay() {\n        if (this.state.accordionStyle === \"open\") {\n            this.setState({\n                accordionStyle: \"closed\"\n            }) \n          } else {\n            this.setState({\n                accordionStyle: \"open\"\n            })\n          }\n        }\n\n    render(){\n    return(\n        <div>\n            <button onClick={this.accordionDisplay}>{this.props.buttonTitle}</button>\n            <div className={this.state.accordionStyle}>\n                <p>{this.props.info}</p>\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default Accordion;","import React from \"react\";\nimport Accordion from \"../Accordion/Accordion\"\n\nclass PreviousWorkoutsPage extends React.Component {\n\n    workouts() {\n        const workoutsInfo = this.props.workoutInfo;\n        const date = this.props.date;\n        if (workoutsInfo.length === 0) {\n            return <p>Input your first workout to start tracking your progress!<br/><br/>\n                    From the Workouts page: <ul><li>select an exercise,</li> <li>press the set button,</li> <li>and press \"save\"!</li></ul></p>\n        } else {\n            return workoutsInfo.map(x => \n                //Renders the dynamic workout number\n                <div> \n                    <Accordion \n                    info={\n                        <div>\n                            <h3>Workout date {date} </h3>\n                            <p>{//Renders all the dynamic info inside of that workout\n                                Object.values(x).map((value, index) => {\n                                        return  <p key={index}>\n                                                    {value[2]} set {value[0]}:  {value[1]} reps\n                                                </p>\n                                            })\n                                    }\n                            </p>\n                        </div>\n                    }\n                    buttonTitle={date}\n                    />\n                </div>\n            )\n            }\n        }\n\n    render(){\n        return(\n            <div>\n                {this.workouts()}\n            </div>\n        )\n    }\n}\n\nexport default PreviousWorkoutsPage;","import React from \"react\";\n\n\nfunction Home() {\n    return (\n      <div>\n        <h2>Welcome to </h2>\n        <h1>Workout Tracker!</h1>\n        <ul>\n          <li>Track your workouts by exercise, reps, and sets</li>\n          <li>Set and save fitness goals</li>\n          <li>Chart and compare your previous workouts</li>\n        </ul><br/>\n        <h2>Press one of the header links to begin!</h2><br/>\n          <p>This is a beta-version of a workout-tracking app by Joel MacKenzie.<br/><br/>See the GitHub page for this project <a href=\"https://github.com/joelmackenz/WorkoutTracker\">here</a>,<br/>\n        see another project by Joel, Mandarin Flashcards, <a href=\"https://joelmackenz.github.io/Mandarin-Flashcard-Web-App\">here</a>,<br/>\n        and see more at <a href=\"https://joelmackenzie.ca\">joelmackenzie.ca</a>.\n        </p><br/>\n      </div>\n    );\n  }\n  \n  export default Home;\n  ","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport \"./Nav-bar.css\";\n\nfunction Nav() {\n\n  return (\n    <nav className='nav'>\n        <h1>Workout Tracker</h1>\n            <ul className=\"nav-links\">\n                <Link className=\"nav-link\" to='/'>\n                    <li>Home</li>\n                </Link>\n                <Link className=\"nav-link\" to='/workout'>\n                    <li>Workout</li>\n                </Link>\n                <Link className=\"nav-link\" to='/previous-workouts'>\n                    <li>Previous Workouts</li>\n                </Link>\n                <Link className=\"nav-link\" to='/placeholder'>\n                    <li>Goals</li>\n                </Link>\n            </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport './App.css';\nimport WorkoutPage from './Components/Workout-Page/Workout-page';\nimport PreviousWorkoutsPage from './Components/Previous-workouts-page/Previous-workouts-page'\nimport Home from './Components/Home';\nimport Nav from \"./Components/Nav-bar/Nav-bar\"\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  const [currentWorkoutInfo, setCurrentWorkoutInfo] = useState([]);\n  const [workoutDate, setWorkoutDate] = useState();\n\n  function updateWorkoutInfo(info, date) {\n    if (currentWorkoutInfo) {\n      const workoutInfoClone = Array.from(currentWorkoutInfo);\n      workoutInfoClone.push(info);\n      setCurrentWorkoutInfo(workoutInfoClone);\n      setWorkoutDate(date)\n  }}\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}> \n      <div className=\"App\">\n        <Nav/>\n        <Switch>\n          <Route \n            path=\"/\" \n            exact component={Home}/>\n          <Route \n            path=\"/workout\" \n            render={() => <WorkoutPage onChange={updateWorkoutInfo}/>}\n            />\n          <Route \n            path=\"/previous-workouts\" \n            render={(props) => <PreviousWorkoutsPage {...props} \n              workoutInfo={currentWorkoutInfo} \n              date={workoutDate}/>}\n            />\n          {/* <Route path=\"/goals\" component={GoalsPage} /> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}